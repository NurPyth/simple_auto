name: Automated Tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test
          - ALL

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Get latest artifact IDs
        run: |
          ARTIFACTS=$(curl -s -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/NurPyth/simple_auto/actions/artifacts")

          ALLURE_ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '[.artifacts[] | select(.name == "allure-results")] | sort_by(.created_at) | reverse | .[0].id')
          PAGES_ARTIFACT_ID=$(echo "$ARTIFACTS" | jq -r '[.artifacts[] | select(.name == "github-pages")] | sort_by(.created_at) | reverse | .[0].id')

          echo "ALLURE_ARTIFACT_ID=${ALLURE_ARTIFACT_ID:-none}" >> $GITHUB_ENV
          echo "PAGES_ARTIFACT_ID=${PAGES_ARTIFACT_ID:-none}" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest
    needs: download-history
    outputs:
      first_test: ${{ steps.first_test.outputs.result }}
      second_test: ${{ steps.second_test.outputs.result }}
      ALL: ${{ steps.ALL.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run first test
        id: first_test
        if: github.event.inputs.deployment_target == 'first_test'
        run: pytest tests/test_button_page.py --alluredir=allure-results
      - name: Save result first test
        run: echo "result=success" >> $GITHUB_OUTPUT
      - name: Run second test
        id: second_test
        if: github.event.inputs.deployment_target == 'second_test'
        run: pytest tests/test_like_a_button_page.py --alluredir=allure-results
      - name: Save result second test
        run: echo "result=failure" >> $GITHUB_OUTPUT
      - name: Run ALL tests
        id: ALL
        if: github.event.inputs.deployment_target == 'ALL'
        run: pytest tests/
      - name: Save result ALL tests
        run: echo "result=success" >> $GITHUB_OUTPUT

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate Allure Report
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate Allure report
        run: |
          mkdir -p _site/history
          allure generate allure-results -o _site --clean
      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: _site/
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: [test, generate-report]
    name: Publish Allure Report
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Notify success
        if: ${{ needs.test.outputs.first_test != 'failure' && needs.test.outputs.second_test != 'failure' && needs.test.outputs.ALL != 'failure' }}
        run: |
          curl --location "https://hooks.slack.com/services/${{ secrets.SLACK }}" \
          --header "Content-Type: application/json" \
          --data "{\"text\": \":white_check_mark: Tests finished successfully! Report: https://nurpyth.github.io/simple_auto/\"}"
      - name: Notify failure
        if: ${{ needs.test.outputs.first_test == 'failure' || needs.test.outputs.second_test == 'failure' || needs.test.outputs.ALL == 'failure' }}
        run: |
          curl --location "https://hooks.slack.com/services/${{ secrets.SLACK }}" \
          --header "Content-Type: application/json" \
          --data "{\"text\": \":no_entry: Some tests failed. Report: https://nurpyth.github.io/simple_auto/\"}"
